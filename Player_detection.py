# -*- coding: utf-8 -*-
"""CVTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lNVGgGSUXyTTYtDUQaPtMmxRIPMlChOP
"""


# !pip install -U torch sahi yolov5
# !pip install Pillow==9.0.0

# from google.colab import drive
# drive.mount('/content/drive')

from sahi.utils.yolov5 import (
    download_yolov5s6_model,
)


# import required functions, classes
from sahi.model import Yolov5DetectionModel
from sahi.utils.cv import read_image
from sahi.utils.file import download_from_url
from sahi.predict import get_prediction, get_sliced_prediction, predict
from IPython.display import Image

yolov5_model_path = 'models/yolov5s6.pt'
download_yolov5s6_model(destination_path=yolov5_model_path)

detection_model = Yolov5DetectionModel(
    model_path=yolov5_model_path,
    confidence_threshold=0.3,
    device="cpu",
)

result = get_sliced_prediction(
    "./Input/input.png",
    detection_model,
    slice_height = 256,
    slice_width = 256,
    overlap_height_ratio = 0.2,
    overlap_width_ratio = 0.2
)

result.export_visuals(export_dir="YOLO/")

Image("./YOLO/prediction_visual.png")

import pandas as pd
predictions = result.to_coco_annotations()
# test = predictions[0]
# test['category_name'] == 'person'

check = pd.DataFrame.from_dict(predictions)
check = check.loc[check['category_name'] == 'person']
check = check.loc[check['score'] >= 0.75]

player = check['bbox']
player = player.values.flatten()
player = player.tolist()

df = pd.DataFrame(player,columns=["x","y","w","h"])
df.to_csv("./CSV/playerLocation.csv");

import cv2
import numpy as np

image = cv2.imread("./Input/input.png")
# image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
for i in range(0,check.shape[0]):
  temp = check.iloc[i]
  dimensions = temp['bbox']
  player = image[dimensions[1]:dimensions[1] + dimensions[3], dimensions[0]: dimensions[0] + dimensions[2]]
  hsv = cv2.cvtColor(player, cv2.COLOR_BGR2HSV)

  ## mask of green (36,25,25) ~ (86, 255,255)
  # mask = cv2.inRange(hsv, (36, 25, 25), (86, 255,255))
  mask = cv2.inRange(hsv, (36, 25, 25), (70, 255,255))
  imask = mask>0
  green = np.zeros_like(player, np.uint8)
  imask = ~imask;
  green[imask] = player[imask]
  cv2.imwrite('./YOLO_Players/{}.jpeg'.format(i+10), green)

# !zip -r /content/Folder1.zip /content/demo_data/Folder1
# !rm -rf demo_data/Folder1